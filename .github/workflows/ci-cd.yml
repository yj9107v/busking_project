name: CI/CD - Backend & Frontend + Manual Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [develop]  # ✅ PR 대상 develop에서만 CI 실행

  workflow_dispatch:  # ✅ CD는 수동으로만 실행 (main 브랜치 기준)

jobs:
  # ✅ 백엔드 CI
  backend:
    name: 🧪 Backend CI
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: backend
    env:
      DEV_MYSQL_URL: ${{ secrets.DEV_MYSQL_URL }}
      DEV_MYSQL_USERNAME: ${{ secrets.DEV_MYSQL_USERNAME }}
      DEV_MYSQL_PASSWORD: ${{ secrets.DEV_MYSQL_PASSWORD }}
      google_client_id: ${{ secrets.google_client_id }}
      google_client_secret: ${{ secrets.google_client_secret }}
      kakao_client_id: ${{ secrets.kakao_client_id }}

    steps:
      - name: ✅ 소스코드 체크아웃
        uses: actions/checkout@v3

      - name: ☕ Java 21 설정
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'microsoft'

      - name: 🔧 Gradle 권한 부여
        run: chmod +x ./gradlew

      - name: 🏗️ Build 실행
        run: ./gradlew build -x test

      #- name: ✅ Test 실행
      #  run: ./gradlew test

  # ✅ 프론트엔드 CI
  frontend:
    name: 🎨 Frontend CI
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - name: ✅ 소스코드 체크아웃
        uses: actions/checkout@v3

      - name: 🟢 Node.js 18 설정
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 패키지 설치
        run: npm ci

      - name: ⚙️ 빌드 실행
        run: npm run build

  # ✅ CD: 수동 배포 (main 브랜치 기준)
  deploy:
    name: 🚀 Deploy to Elastic Beanstalk (Test Mode)
    if: github.ref == 'refs/heads/main'
    needs: [backend, frontend]
    runs-on: ubuntu-latest

    steps:
      - name: ✅ 소스코드 체크아웃
        uses: actions/checkout@v3

      - name: 📦 프로젝트 zip 압축 (테스트용)
        run: |
          echo "✅ zip 압축 테스트 실행 중..."
          zip -r deploy.zip . -x ".git/*" ".github/*" "README.md"

      - name: 🛠️ AWS 인증 설정 (테스트용)
        run: |
          echo "✅ AWS 인증 테스트 실행 중..."
          echo "    Access Key ID: [MASKED]"
          echo "    Region: ap-northeast-2"

      - name: 📤 S3 업로드 및 EB 배포 (테스트용)
        run: |
          echo "📤 S3로 deploy.zip 업로드 (테스트용)"
          echo "EB 버전 생성: ver-${{ github.run_id }}"
          echo "EB 환경 업데이트 시작 (환경 이름: YOUR_ENV_NAME)"
          echo "🎉 테스트용 CD 파이프라인 실행 완료!"